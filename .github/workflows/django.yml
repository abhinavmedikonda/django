name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - name: set-up-python-${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: install-dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test
  
  sonar-quality:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - name: official-sonarqube-scan
      # You may pin to the exact commit or the version.
      # uses: SonarSource/sonarqube-scan-action@689fb39b34b9aa95ebc5f8f119343ddd51542402
      uses: SonarSource/sonarqube-scan-action@v6
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarcloud.io
      continue-on-error: true
      with:
        args: >
          -Dsonar.projectKey=django
          -Dsonar.organization=abhinavmedikonda
          -Dsonar.sources=.
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.branch.name=${{ github.ref_name }}
          -Dsonar.qualitygate.wait=true
          -Dsonar.qualitygate.timeout=300
    - name: Print scanner report-task (always)
      if: always()
      run: |
        echo "==== .scannerwork/report-task.txt ===="
        if [ -f .scannerwork/report-task.txt ]; then
          sed -n '1,200p' .scannerwork/report-task.txt || true
        else
          echo "No .scannerwork/report-task.txt found."
        fi

    - name: Fetch SonarCloud quality-gate summary (always)
      if: always()
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarcloud.io
        SONAR_PROJECT_KEY: django
      run: |
        echo "Querying SonarCloud for project status..."
        set +e
        # Fetch quality gate status for the project
        curl -s -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/qualitygates/project_status?projectKey=${SONAR_PROJECT_KEY}" | python -m json.tool || true
        # Also fetch recent analyses (optional)
        echo "Recent analyses (top 5):"
        curl -s -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/project_analyses/search?project=${SONAR_PROJECT_KEY}&ps=5" | python -m json.tool || true
          
